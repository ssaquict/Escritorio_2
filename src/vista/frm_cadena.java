/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;


/**
 *
 * @author SistemasU
 */
public class frm_cadena extends javax.swing.JFrame {
    
    
    private Object cadena;

    /**
     * Creates new form frm_cadena
     */
    
    public frm_cadena() {
        initComponents();
        this.setLocationRelativeTo(null);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        ruta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mostrar = new javax.swing.JTextArea();
        procesar = new javax.swing.JButton();
        resul01 = new javax.swing.JTextField();
        resul02 = new javax.swing.JTextField();
        resul03 = new javax.swing.JTextField();
        resul04 = new javax.swing.JTextField();
        resul05 = new javax.swing.JTextField();
        resul06 = new javax.swing.JTextField();
        resul07 = new javax.swing.JTextField();
        resul08 = new javax.swing.JTextField();
        resul09 = new javax.swing.JTextField();
        resul10 = new javax.swing.JTextField();
        resul11 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        copiar = new javax.swing.JMenuItem();
        cortar = new javax.swing.JMenuItem();
        Pegar = new javax.swing.JMenuItem();
        Buscar = new javax.swing.JMenuItem();
        Reemplazar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mostrar.setColumns(20);
        mostrar.setRows(5);
        mostrar.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                mostrarAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(mostrar);

        procesar.setText("Procesar");
        procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(procesar))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resul01, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                                .addComponent(ruta, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(resul02)
                                .addComponent(resul03, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(resul04)
                                .addComponent(resul05)
                                .addComponent(resul06)
                                .addComponent(resul07)
                                .addComponent(resul08)
                                .addComponent(resul09)
                                .addComponent(resul10)
                                .addComponent(resul11)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(procesar)
                .addGap(30, 30, 30)
                .addComponent(ruta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resul01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resul11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        Abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Abrir.setText("Abrir");
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        jMenu1.add(Abrir);

        Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        jMenu1.add(Guardar);

        SaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        SaveAs.setText("Guardar como");
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(SaveAs);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        copiar.setText("Copiar");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        jMenu2.add(copiar);

        cortar.setText("Cortar");
        jMenu2.add(cortar);

        Pegar.setText("Pegar");
        Pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PegarActionPerformed(evt);
            }
        });
        jMenu2.add(Pegar);

        Buscar.setText("Buscar");
        jMenu2.add(Buscar);

        Reemplazar.setText("Reemplazar");
        jMenu2.add(Reemplazar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        if(archivo != null){
            ruta.setText(archivo.getAbsolutePath());
        }
               FileReader archivo1;
                BufferedReader lector;
                
                try{

                    //archivo = "C:\\Users\\SistemasU\\Documents\\Proyecto\\texto1.txt";
                    archivo1 = new FileReader(archivo);
                    if(archivo1.ready()){
                        lector = new BufferedReader(archivo1);
                        //String cadena
                        
                        while((cadena = lector.readLine()) != null ){
                            System.out.println(cadena);
                            mostrar.setText((String) cadena);
                        }
                        
                    }else{
                        System.out.println("El archivo no esta listo para ser leido...");
                    }  
                }catch(IOException e){
                    System.out.println("Error: " + e.getMessage());
                    }
    }//GEN-LAST:event_AbrirActionPerformed

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_SaveAsActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        String contentToWrite = mostrar.getText();
        String path = ruta.getText();//"C:\IdeaProjects\JavaProblems\src\main\java\writeStringToFile\target\targetFile.txt";
        try {
            Files.write(Paths.get(path), contentToWrite.getBytes());
        } catch (IOException ex) {
            Logger.getLogger(frm_cadena.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarActionPerformed
        // TODO add your handling code here:
        String cad = mostrar.getText();
        var totalCharacters =  cad.chars().filter(ch -> ch != ' ').count();
        resul01.setText("Hay una resultado de " + totalCharacters + " caracteres en la cadena");
       
        String cad1 = mostrar.getText();
        String[] words = cad1.split("\\s+");
        resul02.setText("Numero de palabras: "+words.length);  
        
        String cad2 = mostrar.getText();
        char firstCharacter = cad2.charAt(0);
        resul03.setText("El primer caracter de la cadena: "+ firstCharacter);
        
        String cad3 = mostrar.getText();
        String lastCharacter = cad3.substring(cad3.length() - 1);
        char[] lastChar = lastCharacter.toCharArray();
        resul04.setText("El ultimo caracter de la cadena: "+lastChar[lastChar.length - 1]);
        
        //String firstWord = "Magic Word";
        String cad4 = mostrar.getText();
        if(cad4.contains(" ")){
            cad4= cad4.substring(0, cad4.indexOf(" ")); 
            resul05.setText("Primera palabra de la cadena: "+ cad4);
           }
        
        String cad5 = mostrar.getText();
        String[] parts = cad5.split(" ");
        String lastWord = parts[parts.length - 1];
        resul06.setText("Ultima palabra de la cadena: "+ lastWord);
        
        //String exampleString = "This is just a sample string";
        String cad6 = mostrar.getText();
        int total01_Characters = 0;
        int total02_Characters = 0;
        int total03_Characters = 0;
        char temp01, temp02, temp03;
        for (int i = 0; i < cad6.length(); i++) {

            temp01 = cad6.charAt(i);
            temp02 = cad6.charAt(i);
            temp03 = cad6.charAt(i);
            if (temp01 == 'a')
                total01_Characters++;
            if (temp02 == 'A')
                total02_Characters++;
            if (temp03 == 'á')
                total03_Characters++;
        }
        
        resul07.setText("a: aparece " + total01_Characters + " A: aparece " + total02_Characters +" á: aparece " + total03_Characters +" veces en la candena");
        
        String cad7 = mostrar.getText();
        int total1_Characters = 0;
        int total12_Characters = 0;
        int total13_Characters = 0;
        char temp1, temp12, temp13;
        for (int i = 0; i < cad7.length(); i++) {

            temp1 = cad7.charAt(i);
            temp12 = cad7.charAt(i);
            temp13 = cad7.charAt(i);
            if (temp1 == 'e')
                total1_Characters++;
            if (temp12 == 'E')
                total12_Characters++;
            if (temp13 == 'é')
                total13_Characters++;
        }
            

        //System.out.println("e aparece " + total1_Characters + " E aparece " + total12_Characters +" é aparece " + total13_Characters +" veces en la candena");
        resul08.setText("e aparece " + total1_Characters + " E aparece " + total12_Characters +" é aparece " + total13_Characters +" veces en la candena");
        
        String cad8 = mostrar.getText();
        int total21_Characters = 0;
        int total22_Characters = 0;
        int total23_Characters = 0;
        char temp21, temp22, temp23;
        for (int i = 0; i < cad8.length(); i++) {

            temp21 = cad8.charAt(i);
            temp22 = cad8.charAt(i);
            temp23 = cad8.charAt(i);
            if (temp21 == 'i')
                total21_Characters++;
            if (temp22 == 'I')
                total22_Characters++;
            if (temp23 == 'í')
                total23_Characters++;
        }

        //System.out.println("e aparece " + total21_Characters + " E aparece " + total22_Characters +" é aparece " + total23_Characters +" veces en la candena");
        resul09.setText("e: aparece " + total21_Characters + " E: aparece " + total22_Characters +" é; aparece " + total23_Characters +" veces en la candena");
                
        String cad9 = mostrar.getText();
        int total31_Characters = 0;
        int total32_Characters = 0;
        int total33_Characters = 0;
        char temp31, temp32, temp33;
        for (int i = 0; i < cad9.length(); i++) {

            temp31 = cad9.charAt(i);
            temp32 = cad9.charAt(i);
            temp33 = cad9.charAt(i);
            if (temp31 == 'o')
                total31_Characters++;
            if (temp32 == 'O')
                total32_Characters++;
            if (temp33 == 'ó')
                total33_Characters++;
            
        }

        System.out.println("e aparece " + total31_Characters + " E aparece " + total32_Characters +" é aparece " + total33_Characters +" veces en la candena");
        resul10.setText("o; aparece " + total31_Characters + " O: aparece " + total32_Characters +" ó: aparece " + total33_Characters +" veces en la candena");
        
        String cad10 = mostrar.getText();
        int total41_Characters = 0;
        int total42_Characters = 0;
        int total43_Characters = 0;
        char temp41, temp42, temp43;
        for (int i = 0; i < cad10.length(); i++) {

            temp41 = cad10.charAt(i);
            temp42 = cad10.charAt(i);
            temp43 = cad10.charAt(i);
            
            if (temp41 == 'u')
                total41_Characters++;
            if (temp42 == 'U')
                total42_Characters++;
            if (temp43 == 'ú')
                total43_Characters++;
        }

        //System.out.println("e aparece " + total41_Characters + " E aparece " + total42_Characters +" é aparece " + total43_Characters +" veces en la candena");
        resul11.setText("u: aparece " + total41_Characters + " U: aparece " + total42_Characters +" ú aparece " + total43_Characters +" veces en la candena");
        
    }//GEN-LAST:event_procesarActionPerformed

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_copiarActionPerformed

    private void PegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PegarActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_PegarActionPerformed

    private void mostrarAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_mostrarAncestorAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mostrarAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        String cadena;
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_cadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_cadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_cadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_cadena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
    

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                        
                
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frm_cadena.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(frm_cadena.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(frm_cadena.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(frm_cadena.class.getName()).log(Level.SEVERE, null, ex);
                }
                new frm_cadena().setVisible(true);
            }

            private FileReader FileReader(JLabel ruta) {
                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenuItem Buscar;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem Pegar;
    private javax.swing.JMenuItem Reemplazar;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mostrar;
    private javax.swing.JPanel panel;
    private javax.swing.JButton procesar;
    private javax.swing.JTextField resul01;
    private javax.swing.JTextField resul02;
    private javax.swing.JTextField resul03;
    private javax.swing.JTextField resul04;
    private javax.swing.JTextField resul05;
    private javax.swing.JTextField resul06;
    private javax.swing.JTextField resul07;
    private javax.swing.JTextField resul08;
    private javax.swing.JTextField resul09;
    private javax.swing.JTextField resul10;
    private javax.swing.JTextField resul11;
    private javax.swing.JLabel ruta;
    // End of variables declaration//GEN-END:variables

    

}
